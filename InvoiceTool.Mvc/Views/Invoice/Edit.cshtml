@using InvoiceTool.Mvc.ViewModels.Invoice
@model EditInvoiceViewModel

<h2>Wijzig factuur</h2>

<form asp-action="Edit" method="post" id="invoiceForm">
    <input type="hidden" asp-for="Invoice.Id" />

    <div class="form-group">
        <label asp-for="Invoice.Number"></label>
        <input asp-for="Invoice.Number" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="Invoice.Date"></label>
        <input asp-for="Invoice.Date" type="date" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="Invoice.ExpirationDate"></label>
        <input asp-for="Invoice.ExpirationDate" type="date" class="form-control" required />
    </div>

    <div class="form-group">
        <label asp-for="Invoice.NetPrice"></label>
        <input asp-for="Invoice.NetPrice" class="form-control" readonly id="netPrice" />
    </div>

    <div class="form-group">
        <label asp-for="Invoice.TaxPrice"></label>
        <input asp-for="Invoice.TaxPrice" class="form-control" readonly id="taxPrice" />
    </div>

    <div class="form-group">
        <label asp-for="Invoice.GrossPrice"></label>
        <input asp-for="Invoice.GrossPrice" class="form-control" readonly id="grossPrice" />
    </div>

    <div class="form-group">
        <label asp-for="Invoice.CustomerId">Klant</label>
        <select asp-for="Invoice.CustomerId" class="form-control" asp-items="@(new SelectList(Model.Customers, "Id", "Name"))">
            <option value="">Selecteer een klant</option>
        </select>
    </div>


    <h3>Factuurregels</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Omschrijving</th>
                <th>Stuks prijs</th>
                <th>BTW percentage</th>
                <th>Aantal</th>
                <th>Subtotaal</th>
                <th>Acties</th>
            </tr>
        </thead>
        
        <tbody id="invoiceLinesTable"></tbody>

    </table>

    <button type="button" class="btn btn-primary" onclick="addInvoiceLine()">Regel toevoegen</button>

    <input type="hidden" name="InvoiceLinesJson" id="invoiceLinesInput" value='@Html.Raw(Json.Serialize(Model.Invoice.InvoiceLines))' />

    <button type="submit" class="btn btn-success">Opslaan</button>
</form>


@section Scripts {
    <script>
        let invoiceId = $("#Invoice_Id").val();
        let invoiceLines = @Html.Raw(Json.Serialize(Model.Invoice.InvoiceLines));

        $(document).ready(function() {
            getInvoiceLines();
        });

        function getInvoiceLines() {
            let invoiceId = $("#Invoice_Id").val();

            let data = { InvoiceId: invoiceId }

            getData('@Url.Action("GetInvoiceLines", "InvoiceLine")', data, 'invoiceLinesTable');
        }

        function addInvoiceLine() {
            let newLine = {
                InvoiceId: invoiceId,
                Description: "",
                UnitPrice: 0,
                TaxPercentage: 21,
                Quantity: 1
            };

            saveData('@Url.Action("Save", "InvoiceLine")', newLine, getInvoiceLines);
        }

        function updateInvoiceLine(id) {
            let updatedLine = { 
                Id: id,
                InvoiceId: invoiceId,
                Description: $(`#description_${id}`).val(),
                UnitPrice: $(`#unit-price_${id}`).val(),
                TaxPercentage: $(`#tax-percentage_${id}`).val(),
                Quantity: $(`#quantity_${id}`).val()
            };

            saveData('@Url.Action("Save", "InvoiceLine")', updatedLine, getInvoiceLines);
        }

        function updateInvoiceData() {
            let netPrice = 0;
            let taxPrice = 0;

            invoiceLines.forEach(line => {
                let lineTotal = line.UnitPrice * line.Quantity;
                netPrice += lineTotal;
                taxPrice += lineTotal * (line.TaxPercentage / 100);
            });

            document.getElementById("invoiceForm").addEventListener("submit", function () {
                document.getElementById("invoiceLinesInput").value = JSON.stringify(invoiceLines);
            });
        }

        function removeInvoiceLine(id) {
            let url = '@Url.Action("Delete", "InvoiceLine")';

            deleteData(`${url}?id=${id}`, getInvoiceLines);
        }
    </script>
}